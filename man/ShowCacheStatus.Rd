% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ShowCacheStatus.R
\name{ShowCacheStatus}
\alias{ShowCacheStatus}
\title{Detecting when data on the Data Lake has been updated}
\usage{
ShowCacheStatus(Source = "")
}
\arguments{
\item{Source}{If the Source parameter is not provided then the interactive mode
requests a numeric selection (n). A user may also supply a string
with one of the following (Source) values:\cr
\tabular{rlll}{
\tab  n \strong{Source}       \tab \strong{Effect} \tab \strong{Data Documentation:}\cr
\tab  1 \emph{Email}          \tab For the Spiceworks Email data \tab \code{\link{TestEmailChunk}}  \cr
\tab  2 \emph{Client}         \tab For the Spiceworks PC Client data \tab \code{\link{TestClientChunk}} \cr
\tab  3 \emph{Networkhv}      \tab For the Spiceworks Network data by hypervisor \tab \code{\link{TestNetworkhvChunk}} \cr
\tab  4 \emph{Networkos}      \tab For the Spiceworks Network data by operating system \tab \code{\link{TestNetworkosChunk}} \cr
\tab  5 \emph{ServerRoles}    \tab For the Spiceworks Server Roles data \tab \code{\link{TestServerRolesChunk}} \cr
\tab  6 \emph{WorkloadDB}     \tab For the Spiceworks Workload data for database products \tab \code{\link{TestWorkloadDBChunk}} \cr
\tab  7 \emph{WorkloadEco}    \tab This chunk lists the virt flag and data type along with Hypervisor and OS for the intersection of Network and VID \tab \code{\link{TestWorkloadEcoChunk}} \cr
\tab  8 \emph{WorkloadHW}     \tab This chunk lists the metadata that we received relating to server hardware. \tab \code{\link{TestWorkloadHWChunk}} \cr
\tab  9 \emph{WorkloadN}      \tab This chunk lists the virt flag and data type along with Hypervisor and OS for the Network style data \tab \code{\link{TestWorkloadNChunk}} \cr
\tab 10 \emph{WorkloadVID}    \tab This chunk lists the virt flag and data type along with Hypervisor and OS for the VID style data \tab \code{\link{TestWorkloadVIDChunk}} \cr
\tab 11 \emph{WorkloadWL}     \tab For the Spiceworks workload data for non-database products \tab \code{\link{TestWorkloadWLChunk}} \cr
\tab 12 \emph{CCMCost}        \tab For the Spiceworks CCM Cost data\cr
\tab 13 \emph{CCMUsage}       \tab For the Spiceworks CCM Usage data\cr
\tab 14 \emph{OnlineServices} \tab For the Spiceworks Online Services Data\cr
\tab 15 \emph{VID}            \tab For the Spiceworks VID Data\cr
\tab 16 \emph{ServerAge}      \tab For the Spiceworks Server Age Data\cr
\tab 17 \emph{Cosmos}         \tab For the Cosmos Data\cr
}}
}
\value{
Returns an error status to show if the command completed succesfully or not
}
\description{
Compare the local files in the cache with the files on the
Data Lake and warn the user if any have been superseded.
}
\details{
There are often times when our data provider reissues files after discovering
errors in the feed.  This then requires us to re process the loading of that data.
The issue is that, for the convenience of our users, we allow the local system to
keep a cached copy of the original chunk.  This command allows the user to detect
outdated files. \cr \cr
The data lake is separated into distinct areas for each data source.  Because of this
the user must specify the source for which they wish to get a status update.
}
\examples{
ShowCacheStatus("Email")
}
\seealso{
\code{\link{TAPChunks}}

Other Cache Controls: \code{\link{DeleteCache}},
  \code{\link{DeleteOutdatedCache}},
  \code{\link{ListCacheDirectory}},
  \code{\link{RefreshCache}}, \code{\link{ShowCachePath}},
  \code{\link{Unprotect}}
}
\author{
JTA - The Data Scientists
}
\concept{Cache Controls}
